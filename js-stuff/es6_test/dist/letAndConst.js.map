{"version":3,"sources":["src/letAndConst.js"],"names":[],"mappings":";;;;;;;;;;IAAqB,WAAW;WAAX,WAAW;0BAAX,WAAW;;;eAAX,WAAW;;WAKf,oBAAG;;AAEhB,eAAS,CAAC,GAAG;AACX;AACE,cAAI,CAAC,GAAG,QAAQ,CAAA;AACd,iBAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AACd;AACE,mBAAO,CAAC,GAAG,CAAC,EAAC,CAAC,CAAA;;AAEZ,gBAAM,EAAC,GAAG,QAAQ,CAAA;AAClB,gBAAM,CAAC,GAAG,QAAQ,CAAA;AAClB,mBAAO,CAAC,GAAG,CAAC,EAAC,CAAC,CAAA;WAGjB;;;;;SAKJ;OACF;;AAED,OAAC,EAAE,CAAA;KACJ;;;SA3Be,eAAG;AACjB,aAAO,wBAAwB,CAAA;KAChC;;;SAHkB,WAAW;;;qBAAX,WAAW","file":"src/letAndConst.js","sourcesContent":["export default class LetAndConst {\n  static get title() {\n    return 'let and const keywords'\n  }\n\n  static examples() {\n    // Variables declared with let have Block Scope, while variables declared with var have Function Scope\n    function f() {\n      {\n        let x = \"lalala\"\n          console.log(x) // lalala\n          {\n            console.log(x)\n              // okay, block scoped name\n              const x = \"sneaky\"\n              const y = \"cucucu\"\n              console.log(x)\n              // error, const\n              // x = \"foo\"\n          }\n        // error, already declared in block\n        // let x = \"inner\"\n        // error, y is declared inside an inner block\n        // console.log(y)\n      }\n    }\n\n    f()\n  }\n}\n"]}