{"version":3,"sources":["src/letAndConst.js"],"names":[],"mappings":";;;;;;;;;;IAAqB,WAAW;UAAX,WAAW;wBAAX,WAAW;;;cAAX,WAAW;;SAKhB,oBAAG;;AAEjB,YAAS,CAAC,GAAG;AACZ;AACC,SAAI,CAAC,GAAG,QAAQ,CAAA;AACf,YAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AACd;AACC,aAAO,CAAC,GAAG,CAAC,EAAC,CAAC,CAAA;;AAEb,UAAM,EAAC,GAAG,QAAQ,CAAA;AAClB,UAAM,CAAC,GAAG,QAAQ,CAAA;AAClB,aAAO,CAAC,GAAG,CAAC,EAAC,CAAC,CAAA;MAGf;;;;;KAKF;IACD;;AAED,IAAC,EAAE,CAAA;GACH;;;OA3Be,eAAG;AAClB,UAAO,wBAAwB,CAAA;GAC/B;;;QAHmB,WAAW;;;qBAAX,WAAW","file":"src/letAndConst.js","sourcesContent":["export default class LetAndConst {\n\tstatic get title() {\n\t\treturn 'let and const keywords'\n\t}\n\n\tstatic examples() {\n\t\t// Variables declared with let have Block Scope, while variables declared with var have Function Scope\n\t\tfunction f() {\n\t\t\t{\n\t\t\t\tlet x = \"lalala\"\n\t\t\t\t\tconsole.log(x) // lalala\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(x)\n\t\t\t\t\t\t\t// okay, block scoped name\n\t\t\t\t\t\t\tconst x = \"sneaky\"\n\t\t\t\t\t\t\tconst y = \"cucucu\"\n\t\t\t\t\t\t\tconsole.log(x)\n\t\t\t\t\t\t\t// error, const\n\t\t\t\t\t\t\t// x = \"foo\"\n\t\t\t\t\t}\n\t\t\t\t// error, already declared in block\n\t\t\t\t// let x = \"inner\"\n\t\t\t\t// error, y is declared inside an inner block\n\t\t\t\t// console.log(y)\n\t\t\t}\n\t\t}\n\n\t\tf()\n\t}\n}\n"]}